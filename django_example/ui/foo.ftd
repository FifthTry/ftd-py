-- import: ft/assets as ft-assets

-- import: ui/assets

-- import: ft

-- ft.page: TODO

;; IMAGE REMOVED
/-- ftd.image:
src: $assets.files.1.jpg

-- ftd.color black:
light: black
dark: black

-- ftd.color white:
light: white
dark: white

-- ftd.column:
width: fill
height: 500
background-color: $white

/-- ftd.image:
src: $ft-assets.files.static.header.hamburger.svg
background-color: $black

;; INVOCATIONS --------------------------------------------------------
-- ftd.text: Flag status
color: $black

-- ftd.boolean: $flag
color: $black

-- ftd.text: Reset status
color: $black

-- ftd.boolean: $reset_flag
color: $black

-- ftd.text: Task added successfully !!
if: $add_flag
color: $black

-- ftd.text: Task not added yet !!
if: not $add_flag
color: $black

-- ftd.text: Add Task status
color: $black

-- ftd.text: $add-task-status
color: $black
padding-bottom: 10

-- ftd.text: Current status
color: $black

-- ftd.text: $input_status
color: $black
padding-bottom: 10

-- ftd.text: Current tid
color: $black

-- ftd.integer: $input_tid
color: $black
padding-bottom: 10

-- ftd.text: $message
color: $black

-- todo_list:
if: not $flag
items: $items1

-- todo_list:
if: $flag
items: $items2

;; INITIALIZATON --------------------------------------------
;; [input_content] initialized <-
-- string input_status: no status

;; [input_tid] initialized <-
-- integer input_tid: -1

;; [add-task-content] initialized <-
-- string add-task-status: None

;; [flag] initialized <- for checking api update
-- boolean flag: false

;; [add_flag] initialized <- for checking if add api works
-- boolean add_flag: false

;; [reset-flag] initialized <- to reset the todo
-- boolean reset_flag: false

;; [message] initialized <- hello_world processor
-- string message:
$processor$: hello_world

"Default Message"

;; TODO list [items] initialized <- todo_data processor
-- todo_item list items1:
if: not $flag
$processor$: todo_data

-- todo_item list items2:
if: $flag
$processor$: todo_data

;; DEFINITIONS -------------------------------------------


;; TODO record [todo_item] def <-
-- record todo_item:
string task_name:
string status:
integer tid:

;; [todo_list] def <-
-- ftd.column todo_list:
todo_item list items:

--- print-item:
$loop$: $items as $item
status: $item.status
task_name: $item.task_name
tid: $item.tid

--- add-task:

;; [Add task] def <-
-- ftd.row add-task:
spacing: 24
string tn_add: Nothing..

--- ftd.text: Options ->
color: $black
width: 300

--- ftd.text: RESET TODO
color: $black
width: 100
$on-click$: toggle $reset_flag
$on-blur$: toggle $reset_flag

--- ftd.input:
$on-input$: $add-task-status=$VALUE
border-color: $black
placeholder: Enter Task here..

--- ftd.text: Add Task
color: $black
$on-click$: $tn_add=$add-task-status
$on-click$: message-host $add-task-api
$on-click$: toggle $flag
$on-blur$: toggle $flag

;; [Print item def] <-
-- ftd.row print-item:
spacing: 24
string status:
string task_name:
integer tid:

--- ftd.text: $task_name
color: $black
width: 300

--- ftd.text: $status
color: $black
width: 100

;; on-focus => UPDATE input_tid with todo_item tid
;; on-change => UPDATE input_status with current text value
--- ftd.input:
$on-input$: $input_status=$VALUE
border-color: $black
placeholder: Enter Status

;; on-click => Update todo_item status with the current value in the input text-field
--- ftd.text: Update Status
color: $black
$on-mouse-enter$: $input_tid=$tid
$on-click$: $status=$input_status
$on-click$: message-host $update-status-api
$on-mouse-leave$: toggle $flag

;; [UPDATE API OBJECT] def <-
-- object update-status-api:
function: http
method: post
url: /api/update-status
status: $input_status
tid: $input_tid

-- object add-task-api:
function: http
method: post
url: /api/add-task
task_name: $add-task-status